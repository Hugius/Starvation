37 87
META script_type_update
META script_execution_waiting

/// Values
LIST animalTypes = {"pig","cow","chicken","sheep"}
STR toolID = _inventory[_equipIndex]

/// Update animal hover
STR hoveredID = ""
DEC distance = 0.0
INT index = 0
INT maxIndex = misc:get_list_size("animalTypes")
LOOP:
    IF index IS maxIndex:
        BREAK
    EDIT distance = fe3d:raycast_into_model_distance(animalTypes[index], "", <true>)
    IF distance IS -1.0:
        EDIT distance = 1000.0
    ELSE:
        EDIT hoveredID = fe3d:raycast_into_model(animalTypes[index], "", <true>)
        IF hoveredID NOT "":
            BREAK
    INCR index 1

/// Update animal killing
fe3d:text_set_visible("kill", <false>)
IF hoveredID NOT "" AND distance LESS _toolReach AND _dyingAnimalID IS "":
    IF toolID IS "sword_stone" OR toolID IS "sword_iron":
        IF _isInvOpen IS <true>:
            fe3d:text_set_visible("kill", <true>)
            IF _wasSwordPlaying IS <true> AND _isSwordPlaying IS <false>:
                fe3d:model_start_animation(hoveredID, "animal_die", 0)
                EDIT _dyingAnimalType = animalTypes[index]
                EDIT _dyingAnimalID = hoveredID
                DECR _durabilities[0] _durabilityHit
                STR soundID = misc:concat_strings(_dyingAnimalType, "_death")
                VEC3 animalPos = fe3d:model_get_position(hoveredID)
                fe3d:sound_set_position(soundID, animalPos.x, animalPos.y, animalPos.z)
                fe3d:sound_play(soundID, 0, 0)

/// Update animal dying
IF _dyingAnimalID NOT "":
    BOOL deathAnimation = fe3d:model_is_animation_started(_dyingAnimalID, "animal_die")
    IF deathAnimation IS <false>:
        VEC3 animalPos = fe3d:model_get_position(_dyingAnimalID)
        fe3d:model_delete(_dyingAnimalID)
        CAST _idCounter STR
        STR meatID = misc:concat_strings("meat", _idCounter)
        CAST _idCounter INT
        INCR _idCounter 1
        EDIT _fallingMeatID = meatID
        EDIT _fallingMeatTargetHeight = animalPos.y
        EDIT _dyingAnimalID = ""
        INCR animalPos.y _meatFallHeight
        fe3d:model_place(meatID, "meat", animalPos.x, animalPos.y, animalPos.z)
        fe3d:model_set_rotation(meatID, 0.0, 90.0, 0.0)
        VEC3 meatSize = [1.5 3.5 1.5]
        MUL meatSize _animalGrowth
        fe3d:model_set_size(meatID, meatSize.x, meatSize.y, meatSize.z)

/// Update falling meat
IF _fallingMeatID NOT "":
    VEC3 currentPos = fe3d:model_get_position(_fallingMeatID)
    IF currentPos.y MORE _fallingMeatTargetHeight:
        fe3d:model_move(_fallingMeatID, 0.0, -0.1, 0.0)
    ELSE:
        EDIT _fallingMeatID = ""

/// Update meat pickup
EDIT hoveredID = fe3d:raycast_into_model("meat", "", <true>)
IF hoveredID NOT "" AND _wasPickupPlaying IS <true> AND _isPickupPlaying IS <false>:
    IF hoveredID NOT "meat:table":
        EDIT distance = fe3d:raycast_into_model_distance("meat", "", <true>)
        IF distance IS -1.0:
            EDIT distance = 1000.0
        IF distance LESS _pickupReach:
            DEC multiplier = _animalGrowth
            DECR multiplier _initialAnimalGrowth
            MUL multiplier 20.0
            EDIT multiplier = math:ceil(multiplier)
            CAST multiplier INT
            INT meatCount = _meatCount
            MUL meatCount multiplier
            INCR _bag[8] meatCount
            fe3d:model_delete(hoveredID)
            fe3d:sound_play_forced("bag", 0, 0)

/// Update sword sound
BOOL isSoundPlaying = fe3d:sound_is_playing("sword")
BOOL isAllowed = fe3d:text_is_visible("kill")
IF isAllowed IS <true> AND distance LESS _toolReach AND _dyingAnimalID IS "":
    IF _isSwordPlaying IS <true> AND isSoundPlaying IS <false>:
        INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "sword_hit")
        IF frameIndex IS 1:
            fe3d:sound_play("sword", 0, 0)
