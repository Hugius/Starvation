0 23
META script_type_update
META script_execution_waiting

/// Update tool & pickup animation status
STR modelID = _inventory[_equipIndex]
EDIT _wasSwordPlaying = _isSwordPlaying
EDIT _wasPickaxePlaying = _isPickaxePlaying
EDIT _wasAxePlaying = _isAxePlaying
EDIT _wasShovelPlaying = _isShovelPlaying
EDIT _wasHoePlaying = _isHoePlaying
EDIT _wasScythePlaying = _isScythePlaying
EDIT _wasHammerPlaying = _isHammerPlaying
EDIT _wasrodPlaying = _isrodPlaying
EDIT _wasPickupPlaying = _isPickupPlaying
EDIT _isPickupPlaying = fe3d:model_is_animation_started("player", "pickup")
IF modelID IS "":
    EDIT _isSwordPlaying = <false>
    EDIT _isPickaxePlaying = <false>
    EDIT _isAxePlaying = <false>
    EDIT _isShovelPlaying = <false>
    EDIT _isHoePlaying = <false>
    EDIT _isScythePlaying = <false>
    EDIT _isHammerPlaying = <false>
    EDIT _isrodPlaying = <false>
ELSE:
    EDIT _isSwordPlaying = fe3d:model_is_animation_started(modelID, "sword_hit")
    EDIT _isPickaxePlaying = fe3d:model_is_animation_started(modelID, "pickaxe_mine")
    EDIT _isAxePlaying = fe3d:model_is_animation_started(modelID, "axe_cut")
    EDIT _isShovelPlaying = fe3d:model_is_animation_started(modelID, "shovel_dig")
    EDIT _isHoePlaying = fe3d:model_is_animation_started(modelID, "hoe_plow")
    EDIT _isScythePlaying = fe3d:model_is_animation_started(modelID, "scythe_reap")
    EDIT _isHammerPlaying = fe3d:model_is_animation_started(modelID, "hammer_build")
    EDIT _isrodPlaying = fe3d:model_is_animation_started(modelID, "rod_throw")

/// Check if any tool animation playing
EDIT _isToolPlaying = <false>
IF _isSwordPlaying IS <true> OR _isPickaxePlaying IS <true> OR _isAxePlaying IS <true>:
    EDIT _isToolPlaying = <true>
IF _isShovelPlaying IS <true> OR _isHoePlaying IS <true> OR _isScythePlaying IS <true>:
    EDIT _isToolPlaying = <true>
IF _isHammerPlaying IS <true> OR _isrodPlaying IS <true>:
    EDIT _isToolPlaying = <true>

/// Update tool sounds
STR toolID = _inventory[_equipIndex]
BOOL isSoundPlaying = fe3d:sound_is_playing("tool")
IF _isSwordPlaying IS <true>:
    INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "sword_hit")
    BOOL allowedToPlay = (frameIndex IS 1)
ELIF _isPickaxePlaying IS <true>:
    INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "pickaxe_mine")
    BOOL allowedToPlay = (frameIndex IS 2)
ELIF _isAxePlaying IS <true>:
    INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "axe_cut")
    BOOL allowedToPlay = (frameIndex IS 3)
ELIF _isShovelPlaying IS <true>:
    INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "shovel_dig")
    BOOL allowedToPlay = (frameIndex IS 1)
ELIF _isHoePlaying IS <true>:
    INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "hoe_plow")
    BOOL allowedToPlay = (frameIndex IS 3)
ELIF _isScythePlaying IS <true>:
    INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "scythe_reap")
    BOOL allowedToPlay = (frameIndex IS 4)
ELIF _isHammerPlaying IS <true>:
    INT frameIndex = fe3d:model_get_animation_frame_index(toolID, "hammer_build")
    BOOL allowedToPlay = (frameIndex IS 1)
ELSE:
    BOOL allowedToPlay = <false>
IF allowedToPlay IS <true> AND isSoundPlaying IS <false>:
    fe3d:sound_play("tool", 0, 0)
