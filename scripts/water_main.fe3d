5 15
META script_type_update
META script_execution_waiting

/// Values
DEC height = fe3d:water_get_height()
INCR height 1.0
VEC3 camPos = fe3d:camera_get_position()
BOOL mustChangeSounds = <false>

/// Check if player is underwater or not
IF camPos.y LESS height:
    EDIT _isUnderwater = <true>
    DEC speedX = _waterSpeedX
    DEC speedZ = _waterSpeedZ
    MUL speedX -10.0
    MUL speedZ -10.0
    fe3d:camera_move(speedX, 0.0, speedZ)
    /// Enable underwater effects
    fe3d:image_set_visible("underwater", <true>)
    fe3d:graphics_set_min_fog_distance(_underwaterFogMinDistance)
    fe3d:graphics_set_max_fog_distance(_underwaterFogMaxDistance)
    fe3d:graphics_set_fog_thickness(_underwaterFogThickness)
    /// Go under water
    IF _wasUnderWater IS <false>:
        EDIT _wasUnderWater = <true>
        EDIT mustChangeSounds = <true>
        EDIT _wetLensAlpha = 0.0
        fe3d:sound_play_forced("splash", 0, 0)
        fe3d:sound_play("underwater", -1, 0)
ELSE:
    EDIT _isUnderwater = <false>
    /// Disable underwater effects
    fe3d:image_set_visible("underwater", <false>)
    fe3d:graphics_set_min_fog_distance(_initialFogMinDistance)
    fe3d:graphics_set_max_fog_distance(_initialFogMaxDistance)
    fe3d:graphics_set_fog_thickness(_initialFogThickness)
    /// Go out of water
    IF _wasUnderWater IS <true>:
        EDIT _wasUnderWater = <false>
        EDIT mustChangeSounds = <true>
        EDIT _wetLensAlpha = 0.75
        fe3d:sound_play_forced("emerge", 0, 0)
        fe3d:sound_stop("underwater", 0)

/// Update wet lens effect
IF _wetLensAlpha LESS 0.0:
    EDIT _wetLensAlpha = 0.0
ELSE:
    DECR _wetLensAlpha _wetLensSpeed
fe3d:image_set_alpha("wetLens", _wetLensAlpha)

/// Update water color based on time
DEC blueIntensity = 1.0
DECR blueIntensity _skyMixValue
DEC lightness = blueIntensity
INCR lightness 0.25
fe3d:water_set_color(0.0, 0.0, blueIntensity)
/// Also update underwater color
IF _isUnderwater IS <true>:
    fe3d:image_set_color("underwater", lightness, lightness, lightness)
    MUL blueIntensity 0.25
    fe3d:graphics_set_fog_color(0.0, 0.0, blueIntensity)

/// Update water sound
IF mustChangeSounds IS <true>:
    LIST waters = fe3d:sound_find_ids("water")
    INT index = 0
    INT maxIndex = misc:get_list_size("waters")
    BOOL isWaterPaused = fe3d:sound_is_paused(waters[0])
    LOOP:
        IF index IS maxIndex:
            BREAK
        ELSE:
            IF _isUnderwater IS <true> AND isWaterPaused IS <false>:
                fe3d:sound_pause(waters[index])
            IF _isUnderwater IS <false> AND isWaterPaused IS <true>:
                fe3d:sound_resume(waters[index])
        INCR index 1
