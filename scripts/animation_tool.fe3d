0 0
META script_type_update
META script_execution_waiting

/// Determine tool animation type & offset
STR animID = ""
IF _equipIndex IS 0:
    EDIT animID = "sword_hit"
    DEC toolOffset = 1.65
ELIF _equipIndex IS 1:
    EDIT animID = "pickaxe_mine"
    DEC toolOffset = 1.4
ELIF _equipIndex IS 2:
    EDIT animID = "axe_cut"
    DEC toolOffset = 1.15
ELIF _equipIndex IS 3:
    EDIT animID = "shovel_dig"
    DEC toolOffset = 1.0
ELIF _equipIndex IS 4:
    EDIT animID = "hoe_plow"
    DEC toolOffset = 1.3
ELIF _equipIndex IS 5:
    EDIT animID = "scythe_reap"
    DEC toolOffset = 1.0
ELIF _equipIndex IS 6:
    EDIT animID = "hammer_build"
    DEC toolOffset = 1.25
ELIF _equipIndex IS 7:
    DEC toolOffset = 1.15
ELIF _equipIndex IS 8:
    EDIT animID = "rod_throw"
    DEC toolOffset = 1.0

/// Retrieve camera data
VEC3 camPos = fe3d:camera_get_position()
DECR camPos.y _playerHeight
DEC yaw = fe3d:camera_get_yaw()
NEG yaw
INCR yaw 90.0

/// Update tool position & rotation
STR toolID = _inventory[_equipIndex]
BOOL equipped = (toolID NOT "")
BOOL allowed = (_isToolPlaying IS <false> AND _isInvOpen IS <true>)
IF equipped IS <true> AND allowed IS <true>:
    DECR yaw 40.0
    DEC sinRot = math:sin(yaw)
    DEC cosRot = math:cos(yaw)
    MUL sinRot 0.8
    MUL cosRot 0.8
    /// Position
    VEC3 toolPos = camPos
    INCR toolPos.x sinRot
    INCR toolPos.z cosRot
    INCR toolPos.y toolOffset
    fe3d:model_set_position(toolID, toolPos.x, toolPos.y, toolPos.z)
    /// Rotation
    VEC3 toolRot = fe3d:model_get_rotation(toolID)
    EDIT toolRot.y = fe3d:camera_get_yaw()
    NEG toolRot.y
    INCR toolRot.y 90.0
    fe3d:model_set_rotation(toolID, toolRot.x, toolRot.y, toolRot.z)

/// Tool using animation
IF equipped IS <true> AND allowed IS <true>:
    IF animID NOT "" AND _isJumping IS <false> AND _isFalling IS <false>:
        BOOL lmbPressed = fe3d:input_is_mouse_pressed("BUTTON_LEFT")
        IF lmbPressed IS <true> AND _isUnderwater IS <false> AND _isBuilding IS <false>:
            IF _isAbleToMove IS <true>:
                fe3d:model_start_animation(toolID, animID, 0)

/// Tool bobbing animation
IF toolID IS "":
    BOOL isBobbing = <false>
ELSE:
    BOOL isBobbing = fe3d:model_is_animation_started(toolID, "tool_bobbing")
IF equipped IS <true> AND allowed IS <true> AND _isMoving IS <true>:
    IF _isAbleToMove IS <true>:
        IF isBobbing IS <false> AND toolID NOT "torch":
            fe3d:model_start_animation(toolID, "tool_bobbing", 0)

/// Tool bobbing speed
IF isBobbing IS <true>:
    IF _isRunning IS <true>:
        fe3d:model_set_animation_speed(toolID, "tool_bobbing", 2.0)
    ELSE:
        fe3d:model_set_animation_speed(toolID, "tool_bobbing", 1.0)
